---
- name: disable service if exists
  sudo: yes
  service: name={{ app }} state=stopped enabled=no
  ignore_errors: yes

- name: bundle install
  shell:
    bundle install --without development:test --path ~/.gems
    chdir=/home/{{ ansible_ssh_user }}/www/{{ app }}/public

- name: set Procfile
  lineinfile:
    dest=/home/{{ ansible_ssh_user }}/www/{{ app }}/public/Procfile
    regexp="^web"
    line="web{{':'}} bundle exec puma -e production -t 1:16 -w {{ processors.stdout }} -b unix{{':'}}///tmp/{{ app }}.sock"
    backrefs=yes
    state=present

- name: upload env
  copy:
    src={{ local }}/.env
    dest=/home/{{ ansible_ssh_user }}/www/{{ app }}/public/.env
    force=yes

- name: generate app initd daemon
  sudo: yes
  shell:
    bundle exec foreman export upstart /etc/init -a {{ app }} -u {{ ansible_ssh_user }}
    chdir=/home/{{ ansible_ssh_user }}/www/{{ app }}/public

- name: enable app service
  sudo: yes
  service: name={{ app }} state=started enabled=yes
